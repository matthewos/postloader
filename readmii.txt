postLoader3 (readmii.txt 1.2)

========================================
What postLoader is:
========================================
* HomeBrew Browser with subfolder support
* Channel/Title Browser with filters and cover
* neek2o & Uneek+DI game browser with cover support
* Wiiload server

========================================
Features:
========================================

General:
* If started from priiloader it gains AHPBROT and spawn full hardware rights to homebrew applications
* Autoboot your default application/channel: If you don't press (A) in time to enter in interactive mode, postLoader will launch the predefined app (if enabled)
* Direct access to BOOTMII
* Support costom splash screen (only from SD device)
* Full support for UNEEK environment. May work under SNEEK
* Support for Wiimote and GC controllers
* Intergrated UNEEK nand switcher
* wiiload update: If you send postLoader.dol via wiiload, postloader installation will be updated (after confirmation).

oneek2o advanced support
* USB Access for HOMEBREW (see historii.txt for important notices)
* Multiple nand support for different region games
* Built in game cache rebuilder (partially implemented, see historii.txt)

Uneek+DI game browser (see historii.txt)
* Support covers
* Support title vote

Homebrew:
* HB Channel replacement: It can be used to browse homebrew application, with it own interface. 
* Dangerous homebrews can be hidden
* Full support for meta.xml arguments and all other tags.
* It support subfolders (see notes)
* Can browse SD and USB device (FAT32 on first/active partition)
* WiiLoad support (straight, compressed dol, zip archieve)

Titles:
* Nand emulation (ciosx/waninkoko on slot 249)
* AHBPROT is need for real nand browsing (otherwise ios249 is used)
* Wii System Channel replacemente: Can browse and run Channels, WiiWare and VC.
* Can run Titles from real and emulated NAND on SD or USB with folder support
* Titles can be sorted voted and/or hiddened
* Support interactive application sorting
* Sort titles by vote/name
* Titles filters (System channels/wiiware/neogeo/c64... etc)
* Fast titles search
* Download title icons from wiitdb
* Alternat nand folder support (other that classic root)

========================================
Installation:
========================================

(A) Real Wii: priiloader extension via priibooter (see below) [SUGGESTED]

PRO: Easy to upgrade. All priibooter beneficts
CON: SD is always needed in the Wii

1) Copy to your SD or USB root postLoader.dol. 
2) Copy to your SD root priibooter.dol. 
3) Enter in priiloader pressing "reset" when you turn on your wii.
4) Select "Load/Install file" from priiloader menu'
5) Select priibooter.dol
6) Go back to main menu'
7) Select settings -> Autoboot: Installed File
8) Select settings -> Return to: Autoboot
9) If you wish, you can remove priibooter.dol from the SD
10) postLoader MUST exist on the root of SD, and SD must be inside the Wii


(B) Real Wii: priiloader extension

PRO: Do not require an SD always inserted
CON: Upgrades are less easy. Auto update function can't work

1) Copy to your SD root postLoader.dol. 
2) Enter in priiloader pressing "reset" when you turn on your wii.
3) Select "Load/Install file" from priiloader menu'
4) Select postLoader.dol
5) Go back to main menu'
6) Select settings -> Autoboot: Installed File
7) Select settings -> Return to: Autoboot
8) If you wish, you can remove postLoader.dol from the SD

(C) UNEEK: priiloader extension via priibooter (ios 249 NOT required)

1) Copy to your SD root postLoader.dol. 
2) Copy to your SD root neekbooter.dol. 
3) Run your NEEK environment pressing "reset" to enter in neek priiloader.
4) Select "Load/Install file" from priiloader menu'
5) Select neekbooter.dol
6) Go back to main menu'
7) Select settings -> Autoboot: Installed File
8) Select settings -> Return to: Autoboot
9) If you wish, you can remove neekbooter.dol from the SD
10) postLoader MUST exist on the root of SD, and SD must be inside the Wii
11) The first time you enter in postLoader, press (H) to enter in the menu -> Options -> select "Disable boot time USB initialization"

(D) SNEEK: Actually not supperted nor tested. You can try solution (A) also for this. (ios 249 required on neek)


========================================
Usage:
========================================

Keys (during initialization - time depends on the speed of usb init + 2 sec)

(A) Enter in interactive mode (show user interface)
(B) Skip USB initialization

Keys (interactive mode)

(A) Start selected homebrew
(B) Show selected application menu, also act as cancel on popup menu
(-)(+) Change page
(Home) Show postLoader options menu
(1)(GCX) Switch from homebrew to channels..
(2)(GCY) (only in channel mode) Show Filter menu


========================================
CUSTOM SPLASH SCREEN
========================================

Copy your png named "ploader.png" on the root of SD card. 640x480 is suggested.
Using a custom splash screen will slow a bit postLoader startup.


========================================
SUBFOLDER:
========================================
Since version 1.0b2, subfolders are supported. About any depth can be used, but keep in mind that actually postLoader support filenames long up to 255 chars.
To enable subfolder, only meta.xml MUST be present on parent folder. In meta.xml you can (should) edit <name></name> tag to give a description to that folder. An icon.png can be present, otherwise a standard folder icon is shown.

example:

APPS
  |
  |-- HB1 (folder)
  |   |-- boot.dol
  |   |-- meta.xml
  |   |-- icon.xml
  |
  |---- HB2 (folder)
  |   |-- boot.dol
  |   |-- meta.xml
  |   |-- icon.xml
  |
  |---- FOLDER	
        |
        |-- meta.xml (MUST EXIST)
        |-- icon.png (optional)
        |
        |-- HB3
        |   |-- boot.dol
        |   |-- meta.xml
        |   |-- icon.xml
        |
        |-- HB4
            |-- boot.dol
            |-- meta.xml
            |-- icon.xml
		

========================================
NOTES:
========================================

* Screenshots are from dolphin... 
* b after the version is the build number :P

========================================
Additiona applications:
========================================

priibooter.dol:

priibooter is a little console application intended to be installed under priiloader. It allow to
* Boot (remembering last operation [sd needed])
  > postloader.dol from sd:// or usb://
  > HBC
  > system menu
  > neek (bootmii)
* Enable postloader uneek nand folder switching functionality

neekbooter.dol:

To be installed in priiloader under neek. It will run postloader.dol from sd and inform it that it is running under neek.

NAND Folders:

Alternate nand folders are supported only on SD and USB on first partition (active)


========================================
Files you will find after running postLoader:
========================================

SD://ploader.png: custom splashcreen (added by you)
SD://ploader.sd: if it is present, usb will not be used
dev://ploader/channels.png/: icon of installed channels (dev is the one selected the first time)
dev://ploader/channels.cfg/: configuration data for channels/titles
dev://ploader/channels.txt: dump of the last nand scan
nand.dat in every emulated nand folder

dev://ploader/channels.txt: dump of the last nand scan
dev://ploader/ploader.cfg: postloader configuration file
SD://ploader/pldneek.cfg: neek - postloader configuration file
SD://ploader/sdonly.nek: neek - if it is present, usb will not be used


========================================
THEMES:
========================================

Since build b16, postLoader support themes. Actually only one theme at time can be used. 

Themes must be copied to dev://ploader/theme and are composed of the following files

* window.png: window elements. On load, it will be tiled 3x3 to draw corners, top, bottom, left rigth, and center of the window (if windowbk it is not present)
* windowbk.png: (optional) this is the window background. It is actually used for menues. Dimensions should be multiple of 8.
* button.png: 3x3 tile for drawing button (suggested size 24x24 px)
* button_sel.png: 3x3 tile for drawing selected button (suggested size 24x24 px)
* bkg.png: is the 640x480 background png
* frame_back.png: is the background of empty icon. This can be transparent or partially transparent
* frame_mask.png: an icon is drawn on top of this. This shouldn't be transparent
* frame.png: is the standard frame for icons
* frame_sel.png: when an icon is selected, this frame will be drawn

* theme.cfg: it is an ascii configuration containing some customizabile values:
  > grlibSettings.theme.windowMagX: how a window (for example menu) is enlarged in X axes
  > grlibSettings.theme.windowMagY: Y axes
  > grlibSettings.theme.buttonMagX: how a button is enlarged when mouseover... X
  > grlibSettings.theme.buttonMagY: Y
  > grlibSettings.theme.buttonsTextOffsetY: vertical text offset for buttons
  > grlibSettings.fontBMF_reverse = 1: font color is reversed (if 1 text is black)
  > theme.hb_line1Y: hb name
  > theme.hb_line3Y: hb path and args info. If 0 it isn' displayed (like wii theme)
  > theme.hb_line2Y: hb short description 
  > theme.ch_line1Y: title name
  > theme.ch_line2Y: title info
NOTE: actually cfg file do not accept comments (like # or ; as first character of a line)


========================================
UNEEK Nand switcher notes:
========================================

Requirements:
* Newest priibooter.dol (dist. from b34 or above) installed in priiloader
* an sd inside the wii with uneek configured
* the folder usb://nands containing up to 16 uneek nand subfolders

How it works:
When wii boot priibooter will create a list of available nands. Look at message that show the boot mode and press a key on wiimote o gc controller accordly.
If you are in "UNEEK mode" and a nand image is on the root of usb, uneek is started.
The nand can be switched both in real and emulated mode. In postLoader just select [home]->Options->Change UNEEK nand and choose your nand. The wii will reboot and nand changed

NAND tracking:
If you have a uneek nand on the root of usb, you should have also an empty folder under usb://nands. plneek will search an empty folder to store back current nand before copying new one. This is done automatically, but the first time you will try plneek maybe you forget it. So current nand will be backed up in "usb://nands/backup<random number>" folder

========================================
neek2o only features
========================================

Alternate per-game region nand
--------------------

postloader support nand switching for up 4 region. Anternate nand to use can be selected pressing (B) on the game cover

/nands/pl_eu for euro pal nand
/nands/pl_us for usa nand
/nands/pl_jp for japan nand
/nands/pl_kr for korean nand

IMPORTANT: priiloader must be present on the nand. There is non need to configure it.

If the region if different from default, postloader install as "installed file" in priiloader on the selected nand n2oswitch.dol that will run the disc, and on return to menu (or power off/on) will restore old settings
Even if the four roms can be used for any porpouse, I suggest to leave them light, without any additional channel to keep high switching speed

usb homebrew access
-------------------
postLoader thanks to the "magic code" from obcd can now access directly to usb hdd under neek2o. This is enabled with just 2 line of code. KEEP IN MIND, that even
if postLoader will launch any hb, launched hb will not work correctly if relay on data in usb hdd. Every hb like postloader must be updated to run under neek2o like
postloader do. I hope that a lot of homebrew makers will integrate this modification in their applications.
 
Built in game cache rebuilder
-----------------------------
postLoader can now rebuild diconfig.bin by internal function only (ONLY) for the following kind of file structure
 
/wbfs/<gamedescription>[gameid].wbfs
or
/wbfs/<anycharacter>.wbfs
 
it is really much faster then neek2o. Reboot seems to be required.

CREDITS:
----------------------------------------

* obcd for all support during neek2o specific code and for let me enabling usb access under neek2o
* GRRLIB (I've removed ttf support to have much smaller application)
* USB Loader GX, I've used it's app_booter.dol... it seems to give the best compatibility
* wiiXplorer for network code
* Yal for disc boot code
* Joyflow for (better) boot disc code
* Priiloader
* CFG Usb loader (for let me understand how priiload magic words should be used)
* TriiForce: It was integrated in postLoader. I've tried to minimize the impact, so I can update postLoader as triiforce is updated.
* oggzee for helping me to solve homebrew boot problems (wiimc & cfg72)
* Dolphin: great help in testing
* GBATemp community
* davebaol for d2x and path code for ahbprot
* FIX94 video init code

SOURCEs:
----------------------------------------

Last pubblic sources can be downloaded from 

http://alturl.com/ux9vg